{"version":3,"sources":["storeConfig/history.js","actions/actionTypes.js","reducers/gnomes.js","reducers/error.js","reducers/success.js","reducers/fetching.js","reducers/index.js","actions/apiErrors.js","actions/apiSuccess.js","actions/helper/handleApiErrors.js","actions/helper/setLocalStorage.js","actions/gnomesRaw.js","services/GnomesApi.js","environments/environment.js","actions/helper/isLocalStorageStale.js","actions/helper/getLocalStorage.js","actions/localStorage.js","components/Dashboard/Gnome/Gnome.jsx","components/Dashboard/FiltersForm/FiltersForm.jsx","components/Error/Error.jsx","components/Dashboard/Dashboard.jsx","App.jsx","index.jsx","storeConfig/configureStore.js"],"names":["history","createBrowserHistory","FETCH_GNOMES_BEGIN","FETCH_GNOMES_SUCCESS","FETCH_GNOMES_FAILURE","SET_API_ERROR","RESET_API_ERROR","SET_API_SUCCESS","RESET_API_SUCCESS","SET_NETWORK_ERROR","initialState","gnomes","getGnomesSelector","state","extractProfessions","currentGnomes","professions","forEach","gnome","profession","indexOf","push","getFilteredGnomes","createSelector","_ref","searchQuery","bodyParams","hairColor","filtered","filter","name","toLowerCase","includes","sort","gnomeA","gnomeB","hair_color","message","status","combineReducers","router","connectRouter","arguments","length","undefined","action","type","Object","objectSpread","error","LOCATION_CHANGE","success","fetching","setApiErrors","resetApiErrors","resetApiSuccess","handleApiErrors","userMessage","response","errorMessage","concat","setLocalStorage","gnomesSerialized","JSON","stringify","serializedLastDataRefresh","Date","now","localStorage","setItem","getGnomes","dispatch","Promise","resolve","reject","axios","get","then","data","Brastlewark","catch","fetchGnomesSuccess","isLocalStorageStale","lastDataRefresh","getItem","parse","getlocalStorage","setTimeout","getLocalStorageGnomes","getLocalStorage","localGnomes","Gnome","age","weight","height","friends","thumbnail","friendsUX","map","friend","index","react_default","a","createElement","key","professionsUX","Col","className","sm","Card","src","alt","CardHeader","CardBody","CardTitle","CardSubtitle","CardText","FiltersForm","props","formik_esm","initialValues","validationSchema","Yup","shape","queryString","typeError","onSubmit","values","filterGnomesByQuery","errors","touched","submitForm","setFieldValue","FormGroup","onChange","event","persist","target","value","id","placeholder","aria-describedby","Label","htmlFor","multiple","Error","propTypes","PropTypes","string","isRequired","errorUX","Row","xs","md","Dashboard","_this","allGnomes","getFiltered","query","filteredGnomes","setState","this","gnomesUX","_this$props","loading","Error_Error","Spinner","color","Dashboard_Gnome_Gnome","Dashboard_FiltersForm_FiltersForm","CardColumns","PureComponent","connect","App","components_Dashboard_Dashboard","Component","store","createStore","reducer","compose","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","es","esm","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.940558ac.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","export const FETCH_GNOMES_BEGIN = 'FETCH_GNOMES_BEGIN';\nexport const FETCH_GNOMES_SUCCESS = 'FETCH_GNOMES_SUCCESS';\nexport const FETCH_GNOMES_FAILURE = 'FETCH_GNOMES_FAILURE';\nexport const SET_API_ERROR = 'SET_API_ERROR';\nexport const RESET_API_ERROR = 'RESET_API_ERROR';\nexport const SET_API_SUCCESS = 'SET_API_SUCCESS';\nexport const RESET_API_SUCCESS = 'RESET_API_SUCCESS';\nexport const SET_NETWORK_ERROR = 'SET_NETWORK_ERROR';\n","import { createSelector } from 'reselect';\nimport {\n  FETCH_GNOMES_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  gnomes: [],\n};\n\nexport default function gnomes(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_GNOMES_SUCCESS:\n      return {\n        ...state,\n        gnomes: action.gnomes,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getGnomesSelector = state => state.gnomes.gnomes;\n\nexport const extractProfessions = (currentGnomes) => {\n  const professions = [];\n  currentGnomes.gnomes.gnomes.forEach((gnome) => {\n    gnome.professions.forEach((profession) => {\n      if (professions.indexOf(profession) === -1) professions.push(profession);\n    });\n  });\n  return professions;\n};\n\nexport const getProfessions = createSelector(\n  getGnomesSelector,\n  extractProfessions,\n);\n\nexport const getFilteredGnomes = (currentGnomes,\n  {\n    searchQuery, bodyParams, hairColor, profession,\n  }) => {\n  let filtered = currentGnomes;\n\n  if (searchQuery) {\n    filtered = filtered.filter((gnome) => {\n      return gnome.name.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n  }\n  if (bodyParams) {\n    filtered.sort((gnomeA, gnomeB) => (gnomeA[bodyParams] - gnomeB[bodyParams]));\n  }\n  if (hairColor) {\n    filtered = filtered.filter(gnome => gnome.hair_color === hairColor);\n  }\n  if (profession) {\n    filtered = filtered.filter(gnome => gnome.professions.includes(profession));\n  }\n  return filtered;\n};\n","import { LOCATION_CHANGE } from 'react-router-redux';\nimport {\n  SET_API_ERROR,\n  RESET_API_ERROR,\n  SET_NETWORK_ERROR,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  message: null,\n  status: false,\n};\n\nexport default function error(state = initialState, action) {\n  switch (action.type) {\n    case SET_NETWORK_ERROR:\n      return {\n        ...state,\n        message: action.message,\n        status: true,\n      };\n\n    case SET_API_ERROR:\n      return {\n        ...state,\n        message: action.message,\n        status: true,\n      };\n\n    case RESET_API_ERROR:\n    case LOCATION_CHANGE:\n      return {\n        ...state,\n        message: null,\n        status: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { LOCATION_CHANGE } from 'react-router-redux';\nimport {\n  SET_API_SUCCESS,\n  RESET_API_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  message: null,\n  status: false,\n};\n\nexport default function success(state = initialState, action) {\n  switch (action.type) {\n    case SET_API_SUCCESS:\n      return {\n        ...state,\n        message: action.message,\n        status: true,\n      };\n\n    case RESET_API_SUCCESS:\n    case LOCATION_CHANGE:\n      return {\n        ...state,\n        message: null,\n        status: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_GNOMES_BEGIN,\n  FETCH_GNOMES_SUCCESS,\n  FETCH_GNOMES_FAILURE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  status: false,\n};\n\nexport default function fetching(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_GNOMES_BEGIN:\n      return {\n        ...state,\n        status: true,\n      };\n    case FETCH_GNOMES_SUCCESS:\n      return {\n        ...state,\n        status: false,\n      };\n    case FETCH_GNOMES_FAILURE:\n      return {\n        ...state,\n        status: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { history } from '../storeConfig/history';\nimport gnomes from './gnomes';\nimport error from './error';\nimport success from './success';\nimport fetching from './fetching';\n\nexport default combineReducers({\n  router: connectRouter(history),\n  gnomes,\n  error,\n  success,\n  fetching,\n});\n","import {\n  RESET_API_ERROR,\n  SET_API_ERROR,\n} from './actionTypes';\n\nexport const setApiErrors = message => ({\n  type: SET_API_ERROR,\n  message,\n});\n\nexport const resetApiErrors = () => ({\n  type: RESET_API_ERROR,\n});\n","import {\n  SET_API_SUCCESS,\n  RESET_API_SUCCESS,\n} from './actionTypes';\n\nexport const setApiSuccess = message => ({\n  type: SET_API_SUCCESS,\n  message,\n});\n\nexport const resetApiSuccess = () => ({\n  type: RESET_API_SUCCESS,\n});\n","const handleApiErrors = (error, userMessage = '') => {\n  const { response, message } = error;\n  const status = response ? response.status : null;\n  let errorMessage = '';\n  switch (status) {\n    case 401:\n      errorMessage = 'You are not authenticated';\n      break;\n    case 403:\n      errorMessage = 'You are not authorized to access this ressource.';\n      break;\n    case 500:\n      errorMessage = `${userMessage}. There was an internal error, please try again.`;\n      break;\n    case 503:\n      errorMessage = `${userMessage}. The network connection is unavailable at the moment.`;\n      break;\n    default:\n      errorMessage = message;\n  }\n  return errorMessage;\n};\n\nexport default handleApiErrors;\n","const setLocalStorage = (gnomes) => {\n  try {\n    const gnomesSerialized = JSON.stringify(gnomes);\n    const serializedLastDataRefresh = JSON.stringify(Date.now());\n    localStorage.setItem('stateGnomes', gnomesSerialized);\n    localStorage.setItem('stateLastDataRefresh', serializedLastDataRefresh);\n  } catch (error) {\n    // catch error\n  }\n};\nexport default setLocalStorage;\n","import {\n  FETCH_GNOMES_BEGIN,\n  FETCH_GNOMES_SUCCESS,\n  FETCH_GNOMES_FAILURE,\n} from './actionTypes';\nimport { resetApiErrors, setApiErrors } from './apiErrors';\nimport { resetApiSuccess } from './apiSuccess';\nimport { getGnomesData } from '../services/GnomesApi';\nimport handleApiErrors from './helper/handleApiErrors';\nimport setLocalStorage from './helper/setLocalStorage';\n\nconst fetchGnomesBegin = () => ({\n  type: FETCH_GNOMES_BEGIN,\n});\n\nconst fetchGnomesSuccess = gnomes => ({\n  type: FETCH_GNOMES_SUCCESS,\n  gnomes,\n});\n\nconst fetchGnomesFailure = () => ({\n  type: FETCH_GNOMES_FAILURE,\n});\n\nexport const getGnomes = () => (dispatch) => {\n  dispatch(resetApiErrors());\n  dispatch(fetchGnomesBegin());\n  dispatch(resetApiSuccess());\n  getGnomesData()\n    .then((gnomes) => {\n      dispatch(fetchGnomesSuccess(gnomes));\n      setLocalStorage({\n        gnomes,\n      });\n    })\n    .catch((error) => {\n      dispatch(fetchGnomesFailure());\n      const errorMessage = handleApiErrors(error, 'Data could not be retrieved');\n      dispatch(setApiErrors(errorMessage));\n    });\n};\n","import axios from 'axios';\nimport { environment } from '../environments/environment';\n\nconst { gnomesApiUrl } = environment;\n\nexport const getGnomesData = () => new Promise((resolve, reject) => {\n  axios.get(gnomesApiUrl)\n    .then((response) => { resolve(response.data.Brastlewark); })\n    .catch((error) => { reject(error); });\n});\n","export const environment = {\n  gnomesApiUrl: 'https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json',\n};\n","const isLocalStorageStale = () => {\n  const cachingTimeLimit = 60 * 1000 * 5;\n  let lastDataRefresh = null;\n  try {\n    const serializedLastDataRefresh = localStorage.getItem('stateLastDataRefresh');\n    if (serializedLastDataRefresh === null) {\n      return true;\n    }\n    lastDataRefresh = JSON.parse(serializedLastDataRefresh);\n  } catch (error) {\n    return true;\n  }\n  return (Date.now() - cachingTimeLimit) > lastDataRefresh;\n};\n\nexport default isLocalStorageStale;\n","const getlocalStorage = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(function () {\n      try {\n        const gnomesSerialized = localStorage.getItem('stateGnomes');\n        if (gnomesSerialized === null) {\n          reject();\n        }\n        resolve(JSON.parse(gnomesSerialized));\n      } catch (error) {\n        reject(error);\n      }\n    }, 0);\n  });\n};\n\nexport default getlocalStorage;\n","import {\n  FETCH_GNOMES_BEGIN,\n  FETCH_GNOMES_SUCCESS,\n  FETCH_GNOMES_FAILURE,\n} from './actionTypes';\nimport { resetApiErrors, setApiErrors } from './apiErrors';\nimport { resetApiSuccess } from './apiSuccess';\nimport handleApiErrors from './helper/handleApiErrors';\nimport getLocalStorage from './helper/getLocalStorage';\n\nconst fetchGnomesBegin = () => ({\n  type: FETCH_GNOMES_BEGIN,\n});\n\nconst fetchGnomesSuccess = gnomes => ({\n  type: FETCH_GNOMES_SUCCESS,\n  gnomes,\n});\n\nconst fetchGnomesFailure = () => ({\n  type: FETCH_GNOMES_FAILURE,\n});\n\nexport const getLocalStorageGnomes = () => (dispatch) => {\n  dispatch(resetApiErrors());\n  dispatch(fetchGnomesBegin());\n  dispatch(resetApiSuccess());\n  getLocalStorage()\n    .then((localGnomes) => {\n      dispatch(fetchGnomesSuccess(localGnomes.gnomes));\n    })\n    .catch(() => {\n      dispatch(fetchGnomesFailure());\n      const errorMessage = handleApiErrors('Data could not be retrieved');\n      dispatch(setApiErrors(errorMessage));\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\n\nconst Gnome = ({ gnome }) => {\n  const {\n    name,\n    age,\n    weight,\n    height,\n    hair_color,\n    professions,\n    friends,\n    thumbnail\n  } = gnome;\n\n  const friendsUX = friends.map((friend, index) => {\n    return <li key={index}>{friend}</li>\n  });\n\n  const professionsUX = professions.map((profession, index)=> {\n    return <li key={index}>{profession}</li>\n  });\n\n  return (\n    <Col className=\"mb-4\" sm=\"12\">\n      <Card>\n        <img className=\"card-img-top\" src={thumbnail} alt=\"Gnome Portrait\"/>\n        <CardHeader>{name}</CardHeader>\n        <CardBody>\n          <CardTitle>\n            Age:\n            {\" \"}{age}\n          </CardTitle>\n          <CardSubtitle>\n            height:\n            {\" \"}{height}\n          </CardSubtitle>\n          <CardSubtitle>\n            weight:\n            {\" \"}{weight}\n          </CardSubtitle>\n          <CardText>\n            Hair color:\n            {\" \"}{hair_color}\n          </CardText>\n          Friends:\n          <ul>  \n            {friendsUX}\n          </ul>\n          Professions:\n          <ul>  \n            {professionsUX}\n          </ul>   \n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nGnome.propTypes = {\n  gnome: PropTypes.object.isRequired,\n};\n\nexport default Gnome;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { FormGroup, Label } from 'reactstrap';\nimport { Formik, Field, Form } from 'formik';\n\nconst FiltersForm = (props) => (\n <Formik\n  initialValues = {{ searchQuery: '' }}\n  validationSchema = { Yup.object().shape({\n    queryString: Yup.string().typeError('Query needs to be a letter'),\n  })}\n  onSubmit={(values) => { props.filterGnomesByQuery(values); }}\n>\n{({\n  errors,\n  touched,\n  submitForm,\n  setFieldValue,\n}) => (\n    <Form>\n      <FormGroup>\n        <Field\n          className={`form-control ${errors.searchQuery && touched.searchQuery && 'is-invalid'}`}\n          type=\"text\"\n          onChange={event => { \n            event.persist(); \n            setFieldValue('searchQuery', event.target.value, false);\n            submitForm();\n            }\n          }\n          id=\"searchQuery\"\n          name=\"searchQuery\"\n          placeholder=\"SEARCH GNOMES\"\n          aria-describedby=\"Enter a query to search Gnomes data\"\n        />\n        {errors.searchQuery && touched.searchQuery && <div className=\"invalid-feedback\">{ errors.searchQuery}</div>}\n      </FormGroup>\n      <div className=\"form-row justify-content-between align-items-baseline\">\n        <FormGroup className='form-inline col-4'>\n          <Label className='font-weight-bold text-white' htmlFor=\"bodyParams\">Sort by Ascending</Label>\n          <select \n            className='form-control col-12'\n            type=\"checkbox\"\n            id=\"bodyParams\"\n            name=\"bodyParams\"\n            onChange={event => { \n              event.persist(); \n              setFieldValue('bodyParams', event.target.value, false);\n              submitForm();\n              }\n            }\n            > \n            <option value=\"\">Choose Body param</option>\n            <option value=\"age\">Age</option>\n            <option value=\"weight\">Weight</option>\n            <option value=\"height\">Height</option>\n          </select>\n        </FormGroup>\n        <FormGroup className='form-inline col-4'>\n          <Label className='font-weight-bold text-white' htmlFor=\"hairColor\">Filter by hair</Label>\n          <select \n            className='form-control col-12'\n            type=\"checkbox\"\n            id=\"hairColor\"\n            name=\"hairColor\"\n            onChange={event => { \n              setFieldValue('hairColor', event.target.value, false);\n              event.persist(); \n              setFieldValue('hairColor', event.target.value, false);\n              submitForm();\n              }\n            }\n            > \n            <option value=\"\">Choose a Hair color</option>\n            <option value=\"Green\">Green</option>\n            <option value=\"Black\">Black</option>\n            <option value=\"Red\">Red</option>\n            <option value=\"Gray\">Gray</option>\n            <option value=\"Pink\">Pink</option>\n          </select>\n        </FormGroup>\n        <FormGroup className='form-inline col-4'>\n          <Label className='font-weight-bold text-white' htmlFor=\"profession\">Filter by</Label>\n          <select\n            multiple\n            className='form-control col-12'\n            type=\"checkbox\"\n            id=\"profession\"\n            name=\"profession\"\n            onChange={event => { \n              event.persist(); \n              setFieldValue('profession', event.target.value, false);\n              submitForm();\n              }\n            }\n            > <option value=\"\">Choose a profession</option>\n            { props.professions.map((profession, index) => {\n              return <option key={index} value={profession}>{profession}</option>\n            })}\n\n          </select>\n        </FormGroup>\n      </div>\n    </Form>\n  )}\n  </Formik>\n)\n\nFiltersForm.propTypes = {\n  filterGnomesByQuery: PropTypes.func.isRequired,\n  professions: PropTypes.array.isRequired,\n};\n\nexport default FiltersForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n\nconst errorUX = ({ message }) => {\n  return (\n    <Row className=\"m-auto pt-2\">\n      <Col xs=\"12\" md=\"12\" className=\"alert alert-danger\">{ message }</Col>\n    </Row>\n  );\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default errorUX;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CardColumns, Row, Col, Spinner } from 'reactstrap';\nimport Gnome from './Gnome/Gnome';\nimport FiltersForm from './FiltersForm/FiltersForm';\nimport ErrorUX from '../Error/Error';\nimport PropTypes from 'prop-types';\nimport { getFilteredGnomes, extractProfessions, getGnomesSelector } from '../../reducers/gnomes';\nimport './Dashboard.css'\n\nclass Dashboard extends PureComponent{\n\n  state = {\n    gnomes: this.props.gnomes,\n    allGnomes: [],\n  }\n\n  getFiltered = (query) => {\n    let filteredGnomes = getFilteredGnomes(this.state.allGnomes, query);\n    this.setState({\n      gnomes: filteredGnomes,\n    });\n  }\n\n  componentWillReceiveProps({ gnomes }){\n    if(gnomes !== this.props.gnomes){\n      this.setState({\n        gnomes: gnomes,\n        allGnomes: gnomes,\n      });\n    }\n  }\n\n  render(){\n    let gnomesUX = null;\n    const { loading, error } = this.props; \n    const { gnomes } = this.state;\n    const Error = error.status \n    ? <ErrorUX message={error.message} />  \n    : null;\n    if(!loading) {\n      gnomesUX = gnomes.map(gnome => {\n        return <Gnome key={gnome.id} gnome = {gnome} />\n      });\n    }else{\n      gnomesUX = <Spinner color=\"secondary\" className='mx-auto mt-5' />\n    }\n    return(\n      <div className='dashboard-wrapper'> \n        {Error}\n        <Row className=\"pt-5\">\n          <Col className=\"m-auto\" sm=\"12\" md=\"10\">\n            <FiltersForm \n              professions={this.props.professions}\n              filterGnomesByQuery={this.getFiltered}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"m-auto\" sm=\"12\" md=\"10\">\n          <Row>\n            <CardColumns className=\"m-auto\">{ gnomesUX }</CardColumns>\n          </Row>\n          </Col>\n        </Row>\n      </div> \n    )\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    gnomes : getGnomesSelector(state),\n    loading: state.fetching.status,\n    professions: extractProfessions(state),\n    error: state.error,\n  }\n};\n\nDashboard.propTypes = {\n  gnomes: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  professions: PropTypes.array.isRequired,\n  error: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getGnomes } from './actions/gnomesRaw';\nimport isLocalStorageStale from './actions/helper/isLocalStorageStale';\nimport { getLocalStorageGnomes } from './actions/localStorage';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    if(isLocalStorageStale()) dispatch(getGnomes());\n    else dispatch(getLocalStorageGnomes()) \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Dashboard />\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore from './storeConfig/configureStore';\nimport { history } from './storeConfig/history';\n// import 'core-js/fn/array/find';\nimport 'react-app-polyfill/ie11';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { history } from './history';\nimport { logger } from './logger';\nimport reducer from '../reducers';\n\nexport default function configureStore() {\n  if (process.env.NODE_ENV !== 'production') {\n    return createStore(\n      reducer,\n      compose(\n        applyMiddleware(\n          routerMiddleware(history),\n          thunk,\n          logger,\n        ),\n      ),\n    );\n  }\n  return createStore(\n    reducer,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history),\n        thunk,\n      ),\n    ),\n  );\n}\n"],"sourceRoot":""}